[{"E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\reportWebVitals.js":"1","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\index.js":"2","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Login.js":"3","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\NavBar.js":"4","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Schedule.js":"5","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Logout.js":"6","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Home.js":"7","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Admin\\admin.js":"8","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Spinner.js":"9"},{"size":362,"mtime":1607212958863,"results":"10","hashOfConfig":"11"},{"size":1773,"mtime":1608192888925,"results":"12","hashOfConfig":"11"},{"size":1740,"mtime":1608030296272,"results":"13","hashOfConfig":"11"},{"size":1142,"mtime":1607932904696,"results":"14","hashOfConfig":"11"},{"size":205,"mtime":1607873972260,"results":"15","hashOfConfig":"11"},{"size":772,"mtime":1607874436087,"results":"16","hashOfConfig":"11"},{"size":1529,"mtime":1608193411685,"results":"17","hashOfConfig":"11"},{"size":406,"mtime":1608029984336,"results":"18","hashOfConfig":"11"},{"size":104,"mtime":1608193391704,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"fnq1dm",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\reportWebVitals.js",[],["44","45"],"E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\index.js",["46","47"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Login from './Login';\nimport Logout from './Logout'\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport NavBar from './NavBar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './Home';\nimport Schedule from './Schedule';\nimport axios from 'axios';\nimport Admin from './Admin/admin';\n\n\nconst BackUrl = `localhost:4000`\nconst httpProtocol = `http://`;\nconst wsProtocol = `ws://`;\n\n\nconst api = axios.create({\n\n  withCredentials: true,\n  baseURL: httpProtocol+BackUrl\n})\n\n\nconst request = async (path, method, body) => {\n\n  let options = {\n    credentials: 'include',\n    method: method,\n    body: JSON.stringify(body)\n  }\n  let res = await fetch(`${httpProtocol}${BackUrl}${path}`, options)\n  return res\n}\n\nexport {api, wsProtocol};\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/index\">\n          <Home />\n        </Route>\n        <Route path=\"/home\">\n          <Home />\n        </Route>\n        <Route path=\"/schedule\">\n          <Schedule />\n        </Route>\n        <Route path=\"/logout\">\n          <Logout />\n        </Route>\n        <Route path=\"/admin\">\n          <Admin />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n\n    </BrowserRouter>  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Login.js",[],["48","49"],"E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\NavBar.js",["50"],"import React, {useEffect, useState} from 'react'\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport { api } from '.'\r\nimport './navbar.css'\r\nexport default () => {\r\n    const [admin, setAdmin] = useState(false);\r\n    useEffect(() => {\r\n        api.get(\"admin\").then(res => {\r\n            if(!res.data.Success) {\r\n                console.error(res.data.Message)\r\n            } else {\r\n                setAdmin(res.data.Data)\r\n            }\r\n        }).catch(err => console.error)\r\n    })\r\n    return (\r\n    <Navbar>\r\n        <Navbar.Brand>Wilhelmiina</Navbar.Brand>\r\n        <Nav className=\"mr-auto\"> \r\n            <Nav.Item><Link to=\"/home\">Home</Link></Nav.Item>\r\n            <Nav.Item><Link to=\"/schedule\">Schedule</Link></Nav.Item>\r\n            <Nav.Item><Link to=\"/schedule\">Courses</Link></Nav.Item>\r\n            <Nav.Item><Link to=\"/schedule\">Subjects</Link></Nav.Item>\r\n            {admin && \r\n                <Nav.Item> <Link to=\"/admin\">Control Panel</Link> </Nav.Item>\r\n            }\r\n            <Nav.Item><Link to=\"/logout\">Logout</Link></Nav.Item>\r\n        </Nav>\r\n    </Navbar>\r\n    )\r\n}","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Schedule.js",["51"],"E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Logout.js",["52"],"import React, {useEffect, useState}  from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { api } from '.';\r\n\r\nexport default () => {\r\n    const [loggedOut, setLoggedOut] = useState(false);\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        api.get(\"/auth/logout\").then(res => {\r\n            if (!res.data.Success) {\r\n                alert(res.data.Message)\r\n            }\r\n            if(mounted) {\r\n                setLoggedOut(true);\r\n            }\r\n        }).catch(err => {\r\n            alert(err)\r\n        })\r\n        return () => mounted = false;\r\n    });\r\n    return loggedOut? (\r\n        <>\r\n        <Redirect to=\"/login\"></Redirect>\r\n        </>\r\n    ) : (\r\n        <>\r\n            <h1> Logging out... </h1>\r\n        </>\r\n    )\r\n    \r\n};",["53","54"],"E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Home.js",["55","56"],"E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Admin\\admin.js",["57"],"E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Spinner.js",["58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":8,"column":8,"nodeType":"65","messageId":"66","endLine":8,"endColumn":14},{"ruleId":"63","severity":1,"message":"67","line":28,"column":7,"nodeType":"65","messageId":"66","endLine":28,"endColumn":14},{"ruleId":"59","replacedBy":"68"},{"ruleId":"61","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":6,"column":1,"nodeType":"72","endLine":32,"endColumn":2},{"ruleId":"70","severity":1,"message":"71","line":3,"column":1,"nodeType":"72","endLine":13,"endColumn":3},{"ruleId":"70","severity":1,"message":"71","line":5,"column":1,"nodeType":"72","endLine":32,"endColumn":3},{"ruleId":"59","replacedBy":"73"},{"ruleId":"61","replacedBy":"74"},{"ruleId":"70","severity":1,"message":"71","line":6,"column":1,"nodeType":"72","endLine":59,"endColumn":2},{"ruleId":"75","severity":1,"message":"76","line":27,"column":15,"nodeType":"77","endLine":29,"endColumn":6},{"ruleId":"70","severity":1,"message":"71","line":4,"column":1,"nodeType":"72","endLine":26,"endColumn":2},{"ruleId":"70","severity":1,"message":"71","line":3,"column":1,"nodeType":"72","endLine":3,"endColumn":53},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'request' is assigned a value but never used.",["78"],["79"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["78"],["79"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]
[{"E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\reportWebVitals.js":"1","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\index.js":"2","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Login.js":"3","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\NavBar.js":"4","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Schedule.js":"5","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Logout.js":"6","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Home.js":"7"},{"size":362,"mtime":1607212958863,"results":"8","hashOfConfig":"9"},{"size":1578,"mtime":1607871714416,"results":"10","hashOfConfig":"9"},{"size":1465,"mtime":1607873897283,"results":"11","hashOfConfig":"9"},{"size":491,"mtime":1607428017753,"results":"12","hashOfConfig":"9"},{"size":205,"mtime":1607873972260,"results":"13","hashOfConfig":"9"},{"size":772,"mtime":1607874436087,"results":"14","hashOfConfig":"9"},{"size":1092,"mtime":1607875401624,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"fnq1dm",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\reportWebVitals.js",[],["33","34"],"E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\index.js",["35"],"E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Login.js",["36"],"E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\NavBar.js",["37"],"import React from 'react'\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport './navbar.css'\r\nexport default () => (\r\n    <Navbar>\r\n        <Navbar.Brand>Wilhelmiina</Navbar.Brand>\r\n        <Nav className=\"mr-auto\"> \r\n            <Nav.Item><Link to=\"/home\">Home</Link></Nav.Item>\r\n            <Nav.Item><Link to=\"/schedule\">Schedule</Link></Nav.Item>\r\n            <Nav.Item><Link to=\"/logout\">Logout</Link></Nav.Item>\r\n        </Nav>\r\n    </Navbar>\r\n)","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Schedule.js",["38"],"E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Logout.js",["39"],"import React, {useEffect, useState}  from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { api } from '.';\r\n\r\nexport default () => {\r\n    const [loggedOut, setLoggedOut] = useState(false);\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        api.get(\"/auth/logout\").then(res => {\r\n            if (!res.data.Success) {\r\n                alert(res.data.Message)\r\n            }\r\n            if(mounted) {\r\n                setLoggedOut(true);\r\n            }\r\n        }).catch(err => {\r\n            alert(err)\r\n        })\r\n        return () => mounted = false;\r\n    });\r\n    return loggedOut? (\r\n        <>\r\n        <Redirect to=\"/login\"></Redirect>\r\n        </>\r\n    ) : (\r\n        <>\r\n            <h1> Logging out... </h1>\r\n        </>\r\n    )\r\n    \r\n};","E:\\GitProjects\\wilhelmiina-client\\wilhelmiina-client\\src\\Home.js",["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":8,"column":8,"nodeType":"48","messageId":"49","endLine":8,"endColumn":14},{"ruleId":"46","severity":1,"message":"50","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":13},{"ruleId":"51","severity":1,"message":"52","line":5,"column":1,"nodeType":"53","endLine":14,"endColumn":2},{"ruleId":"51","severity":1,"message":"52","line":3,"column":1,"nodeType":"53","endLine":13,"endColumn":3},{"ruleId":"51","severity":1,"message":"52","line":5,"column":1,"nodeType":"53","endLine":32,"endColumn":3},{"ruleId":"51","severity":1,"message":"52","line":6,"column":1,"nodeType":"53","endLine":46,"endColumn":2},{"ruleId":"54","severity":1,"message":"55","line":21,"column":15,"nodeType":"56","endLine":23,"endColumn":6},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]